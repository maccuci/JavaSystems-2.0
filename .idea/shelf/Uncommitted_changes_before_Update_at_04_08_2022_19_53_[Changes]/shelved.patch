Index: OnlineBank/backend/sql/SqlDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package OnlineBank.backend.sql;\r\n\r\nimport OnlineBank.backend.Database;\r\nimport OnlineBank.backend.queries.CoreQueries;\r\nimport com.google.common.util.concurrent.ThreadFactoryBuilder;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.util.concurrent.Executor;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.atomic.AtomicBoolean;\r\n\r\npublic class SqlDatabase implements Database {\r\n\r\n    private static final Executor asyncExecutor = Executors.newSingleThreadExecutor((new ThreadFactoryBuilder()).setNameFormat(\"Async Thread\").build());\r\n\r\n    private Connection connection;\r\n    private final String hostname, database, username, password;\r\n    private final int port;\r\n\r\n    public SqlDatabase(String hostname, String database, String username, String password, int port) {\r\n        this.hostname = hostname;\r\n        this.database = database;\r\n        this.username = username;\r\n        this.password = password;\r\n        this.port = port;\r\n    }\r\n\r\n    @Override\r\n    public void connect() throws Exception {\r\n        Class.forName(\"com.mysql.cj.jdbc.Driver\");\r\n\r\n        connection = DriverManager.getConnection(String.format(\"jdbc:mysql://%s:%d/%s\", hostname, port, database), username, password);\r\n        loadTables();\r\n\r\n        connection.createStatement().executeUpdate(\"CREATE SCHEMA IF NOT EXISTS `\" + database + \"` DEFAULT CHARACTER SET utf8 ;\");\r\n    }\r\n\r\n    boolean loadTables() {\r\n        AtomicBoolean finish = new AtomicBoolean(false);\r\n\r\n        try {\r\n            for(CoreQueries queries : CoreQueries.values()) {\r\n                executeUpdate(queries.toString());\r\n            }\r\n            finish.set(true);\r\n        } catch (Exception e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return finish.get();\r\n    }\r\n\r\n    public ResultSet executeQuery(String query) {\r\n        try {\r\n            return getConnection().createStatement().executeQuery(query);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            System.out.println(\"Impossible to execute the mysql query (\" + query + \").\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public boolean executeAsyncUpdate(String update) {\r\n        AtomicBoolean atomicBoolean = new AtomicBoolean(false);\r\n        asyncExecutor.execute(() -> {\r\n            try {\r\n                PreparedStatement statement = getConnection().prepareStatement(update);\r\n                statement.execute();\r\n                statement.close();\r\n                atomicBoolean.set(true);\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                System.out.printf(\"Impossible to execute a async mysql update (%s). %s\", update, e.getMessage());\r\n            }\r\n        });\r\n        return atomicBoolean.get();\r\n    }\r\n\r\n    public boolean executeUpdate(String update) {\r\n        AtomicBoolean callback = new AtomicBoolean(false);\r\n        try {\r\n            PreparedStatement statement = getConnection().prepareStatement(update);\r\n            statement.execute();\r\n            statement.close();\r\n            callback.set(true);\r\n        } catch (Exception e) {\r\n            System.out.println(\"Impossible to execute a sync mysql update (\" + update + \").\");\r\n        }\r\n        return callback.get();\r\n    }\r\n\r\n    @Override\r\n    public void disconnect() throws Exception {\r\n        getConnection().close();\r\n    }\r\n\r\n    public Connection getConnection() {\r\n        return connection;\r\n    }\r\n\r\n    @Override\r\n    public boolean isConnected() throws Exception {\r\n        return false;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OnlineBank/backend/sql/SqlDatabase.java b/OnlineBank/backend/sql/SqlDatabase.java
--- a/OnlineBank/backend/sql/SqlDatabase.java	(revision 1536835eb6fa5f1af64d850e6e7f695b4a7df3d2)
+++ b/OnlineBank/backend/sql/SqlDatabase.java	(date 1659653607856)
@@ -102,6 +102,6 @@
 
     @Override
     public boolean isConnected() throws Exception {
-        return false;
+        return connection !== null && connec;
     }
 }
